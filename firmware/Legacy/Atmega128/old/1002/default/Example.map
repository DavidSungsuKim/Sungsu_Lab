Archive member included because of file (symbol)

c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a(_mulsi3.o)
                              User.o (__mulsi3)
c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a(_udivmodsi4.o)
                              User.o (__udivmodsi4)
c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a(_exit.o)
                              c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr51/crtm128.o (exit)
c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a(_copy_data.o)
                              Main.o (__do_copy_data)
c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a(_clear_bss.o)
                              Main.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr51/crtm128.o
LOAD Main.o
LOAD Interrupt.o
LOAD User.o
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr51\libc.a
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x3b4
 *(.vectors)
 .vectors       0x00000000       0x8c c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr51/crtm128.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000008c                . = ALIGN (0x2)
                0x0000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000008c        0x0 linker stubs
 *(.trampolines*)
                0x0000008c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000008c                __ctors_start = .
 *(.ctors)
                0x0000008c                __ctors_end = .
                0x0000008c                __dtors_start = .
 *(.dtors)
                0x0000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000008c        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr51/crtm128.o
                0x0000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000008c        0xc c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr51/crtm128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000098       0x1a c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a(_copy_data.o)
                0x00000098                __do_copy_data
 .init4         0x000000b2       0x10 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a(_clear_bss.o)
                0x000000b2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000c2        0x8 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr51/crtm128.o
 *(.init9)
 *(.text)
 .text          0x000000ca        0x4 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr51/crtm128.o
                0x000000ca                __vector_22
                0x000000ca                __vector_28
                0x000000ca                __vector_32
                0x000000ca                __vector_34
                0x000000ca                __vector_24
                0x000000ca                __vector_12
                0x000000ca                __bad_interrupt
                0x000000ca                __vector_6
                0x000000ca                __vector_31
                0x000000ca                __vector_3
                0x000000ca                __vector_23
                0x000000ca                __vector_30
                0x000000ca                __vector_25
                0x000000ca                __vector_11
                0x000000ca                __vector_13
                0x000000ca                __vector_17
                0x000000ca                __vector_19
                0x000000ca                __vector_7
                0x000000ca                __vector_27
                0x000000ca                __vector_5
                0x000000ca                __vector_33
                0x000000ca                __vector_4
                0x000000ca                __vector_9
                0x000000ca                __vector_21
                0x000000ca                __vector_15
                0x000000ca                __vector_29
                0x000000ca                __vector_8
                0x000000ca                __vector_26
                0x000000ca                __vector_14
                0x000000ca                __vector_18
                0x000000ca                __vector_20
 .text          0x000000ce       0xe2 Main.o
                0x000000ce                InitCPU
                0x000000f2                InitDotMatrix
                0x000000f4                DisplayDotMatrix
                0x0000015a                main
 .text          0x000001b0      0x140 Interrupt.o
                0x000001b0                __vector_16
                0x00000220                __vector_10
                0x00000234                __vector_2
                0x0000028c                __vector_1
 .text          0x000002f0       0x3e User.o
                0x000002f0                CalClock
 .text          0x0000032e        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a(_mulsi3.o)
 .text          0x0000032e        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a(_udivmodsi4.o)
 .text          0x0000032e        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a(_exit.o)
 .text          0x0000032e        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a(_copy_data.o)
 .text          0x0000032e        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a(_clear_bss.o)
                0x0000032e                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000032e       0x3e c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a(_mulsi3.o)
                0x0000032e                __mulsi3
 .text.libgcc   0x0000036c       0x44 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a(_udivmodsi4.o)
                0x0000036c                __udivmodsi4
 .text.libgcc   0x000003b0        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a(_exit.o)
 .text.libgcc   0x000003b0        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a(_copy_data.o)
 .text.libgcc   0x000003b0        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a(_clear_bss.o)
                0x000003b0                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000003b0        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a(_exit.o)
                0x000003b0                _exit
                0x000003b0                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000003b0        0x4 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a(_exit.o)
 *(.fini0)
                0x000003b4                _etext = .

.data           0x00800100       0x7e load address 0x000003b4
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr51/crtm128.o
 .data          0x00800100       0x6d Main.o
                0x00800100                pattern
                0x00800104                segment
                0x00800115                gr_dot_scanline
                0x0080011d                gr_dot_num
 .data          0x0080016d        0x0 Interrupt.o
 .data          0x0080016d       0x10 User.o
                0x0080016d                freescale_timer0
 .data          0x0080017d        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a(_mulsi3.o)
 .data          0x0080017d        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a(_udivmodsi4.o)
 .data          0x0080017d        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a(_exit.o)
 .data          0x0080017d        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a(_copy_data.o)
 .data          0x0080017d        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080017e                . = ALIGN (0x2)
 *fill*         0x0080017d        0x1 00
                0x0080017e                _edata = .
                0x0080017e                PROVIDE (__data_end, .)

.bss            0x0080017e        0xb
                0x0080017e                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080017e        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr51/crtm128.o
 .bss           0x0080017e        0x4 Main.o
                0x0080017e                ucLeftNum
                0x0080017f                ucRightNum
                0x00800180                test_i
 .bss           0x00800182        0x7 Interrupt.o
 .bss           0x00800189        0x0 User.o
 .bss           0x00800189        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a(_mulsi3.o)
 .bss           0x00800189        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a(_udivmodsi4.o)
 .bss           0x00800189        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a(_exit.o)
 .bss           0x00800189        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a(_copy_data.o)
 .bss           0x00800189        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/avr51\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
                0x00800189                PROVIDE (__bss_end, .)
                0x000003b4                __data_load_start = LOADADDR (.data)
                0x00000432                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800189        0x0
                0x00800189                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800189                PROVIDE (__noinit_end, .)
                0x00800189                _end = .
                0x00800189                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr51/crtm128.o

.stabstr        0x00000000       0x85
 *(.stabstr)
 .stabstr       0x00000000       0x85 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.4.3/../../../../avr/lib/avr51/crtm128.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x60
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 Main.o
 .debug_aranges
                0x00000020       0x20 Interrupt.o
 .debug_aranges
                0x00000040       0x20 User.o

.debug_pubnames
                0x00000000      0x135
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0xb1 Main.o
 .debug_pubnames
                0x000000b1       0x50 Interrupt.o
 .debug_pubnames
                0x00000101       0x34 User.o

.debug_info     0x00000000      0x521
 *(.debug_info)
 .debug_info    0x00000000      0x244 Main.o
 .debug_info    0x00000244      0x22c Interrupt.o
 .debug_info    0x00000470       0xb1 User.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x303
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x14b Main.o
 .debug_abbrev  0x0000014b      0x11e Interrupt.o
 .debug_abbrev  0x00000269       0x9a User.o

.debug_line     0x00000000      0x501
 *(.debug_line)
 .debug_line    0x00000000      0x25f Main.o
 .debug_line    0x0000025f      0x23f Interrupt.o
 .debug_line    0x0000049e       0x63 User.o

.debug_frame    0x00000000       0xc0
 *(.debug_frame)
 .debug_frame   0x00000000       0x50 Main.o
 .debug_frame   0x00000050       0x50 Interrupt.o
 .debug_frame   0x000000a0       0x20 User.o

.debug_str      0x00000000      0x209
 *(.debug_str)
 .debug_str     0x00000000      0x14c Main.o
                                0x180 (size before relaxing)
 .debug_str     0x0000014c       0x8e Interrupt.o
                                0x145 (size before relaxing)
 .debug_str     0x000001da       0x2f User.o
                                 0xa0 (size before relaxing)

.debug_loc      0x00000000       0x59
 *(.debug_loc)
 .debug_loc     0x00000000       0x13 Main.o
 .debug_loc     0x00000013       0x46 User.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(Example.elf elf32-avr)
LOAD linker stubs
